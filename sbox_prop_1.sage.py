

# This file was *autogenerated* from the file sbox_prop_1.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_4 = Integer(4); _sage_const_0 = Integer(0); _sage_const_16 = Integer(16); _sage_const_3 = Integer(3); _sage_const_0p25 = RealNumber('0.25'); _sage_const_8 = Integer(8); _sage_const_6 = Integer(6); _sage_const_14 = Integer(14); _sage_const_15 = Integer(15); _sage_const_7 = Integer(7); _sage_const_13 = Integer(13); _sage_const_9 = Integer(9); _sage_const_12 = Integer(12); _sage_const_5 = Integer(5); _sage_const_10 = Integer(10); _sage_const_11 = Integer(11)
from sage.crypto.sbox import SBox


def get_ddt(sbox):
    return sbox.difference_distribution_table()


def max_probability_of_diff(ddt):
    return max(max(ddt[_sage_const_1 :,_sage_const_1 :]))/_sage_const_2 **_sage_const_4 
    

def find_num_of_value(ddt,value):
    count=_sage_const_0 
    for x in ddt:
        for y in x:
            if y == value:
                count+=_sage_const_1 
                
    return count

def find_max_abs_bias_inLAT(lat):
    max_ =_sage_const_0 
    for x in lat[_sage_const_1 :,_sage_const_1 :]:
        for y in x:
            if abs(y) >max_:
                max_ =abs(y)
    return max_



def return_component_function(sbox):
    count =_sage_const_0 
    for i in range(_sage_const_16 ):
        f = sbox.component_function(i).algebraic_normal_form()
        print(str(f))
        f_string = str(f)
        f_list = f_string.split('+')
        f_list = [ s.replace(" ","") for s in f_list]
        f_list = [s.replace("*",'') for s in f_list]
        max_ = max(map(len,f_list))
        print(" Boolean function has degree: ",int(max_/_sage_const_2 ))
        if max_/_sage_const_2  ==_sage_const_3 :
            count+=_sage_const_1 
    print("Total Non Zero Component Functions with degree 3: ",count)



def num_abs_values_lat(sbox,value=_sage_const_1 /_sage_const_4 ):
    lat = sbox.linear_approximation_table(scale="bias")
    count =_sage_const_0 
    for x in lat:
        for y in x:
            if abs(y) == value:
                count+=_sage_const_1 
    return count


def properties(s):
    print("SBOX",s)
    ddt_s = s.difference_distribution_table()
    max_prob_diff = max_probability_of_diff(ddt_s)
    print("Maximum Probability of a differential is: ",max_prob_diff )
    print("Number of differentials with probability 1/4: ",find_num_of_value(s.difference_distribution_table(),_sage_const_4 ))
    mx_abs_bias = find_max_abs_bias_inLAT(s.linear_approximation_table())/_sage_const_2 **_sage_const_4 
    print("Maximum Absolute Bias for Sbox: ",mx_abs_bias)
    print("Number of values with absolute bias 1/4: ", num_abs_values_lat(s,_sage_const_0p25 ))
    print("Component Functions")
    return_component_function(s)
    print("\n\n\n")



def get_1_1_ddt(s):
	ddt = get_ddt(s)
	answer = [[_sage_const_0  for x in range(_sage_const_4 )] for j in range(_sage_const_4 )]
	list_ = [_sage_const_1 ,_sage_const_2 ,_sage_const_4 ,_sage_const_8 ]
	for i in range(_sage_const_4 ):
		for  j in range(_sage_const_4 ):
			if ddt[list_[i]][list_[j]] !=_sage_const_0 :
				answer[i][j] =ddt[list_[i]][list_[j]]
	print("    1 2 4 8")
	for i in range(_sage_const_4 ):
		print(_sage_const_2 **i,":", end=' ') 
		for  j in range(_sage_const_4 ):
			print(answer[i][j],end=" ")
		print("\n")

def get_1_1_lat(s):
	lat = s.linear_approximation_table(scale="bias")
	answer = [[_sage_const_0  for x in range(_sage_const_4 )] for j in range(_sage_const_4 )]
	list_ = [_sage_const_1 ,_sage_const_2 ,_sage_const_4 ,_sage_const_8 ]
	for i in range(_sage_const_4 ):
		for  j in range(_sage_const_4 ):
			if lat[list_[i]][list_[j]] !=_sage_const_0 :
				answer[i][j] =lat[list_[i]][list_[j]]
	print("    1   2   4   8")
	for i in range(_sage_const_4 ):
		print(_sage_const_2 **i,":", end=' ') 
		for  j in range(_sage_const_4 ):
			print(answer[i][j],end=" ")
		print("\n")

			

if __name__ == "__main__":
	#s1 = SBox(0,1,2,13,4,7,15,6,8,12,9,11,10,14,5,3)
	s0 = SBox(_sage_const_0 ,_sage_const_6 ,_sage_const_14 ,_sage_const_1 ,_sage_const_15 ,_sage_const_4 ,_sage_const_7 ,_sage_const_13 ,_sage_const_9 ,_sage_const_8 ,_sage_const_12 ,_sage_const_5 ,_sage_const_2 ,_sage_const_10 ,_sage_const_3 ,_sage_const_11 )
	s1 = SBox(_sage_const_0 ,_sage_const_9 ,_sage_const_13 ,_sage_const_2 ,_sage_const_15 ,_sage_const_1 ,_sage_const_11 ,_sage_const_7 ,_sage_const_6 ,_sage_const_4 ,_sage_const_5 ,_sage_const_3 ,_sage_const_8 ,_sage_const_12 ,_sage_const_10 ,_sage_const_14 )


	print("Properties SBOX 0")

	properties(s0)
	print("1-1 DDT")
	get_1_1_ddt(s0)
	print("1-1 LAT")
	get_1_1_lat(s0)
	
	print("Properties SBOX 1")

	properties(s1)
	print("1-1 DDT")
	get_1_1_ddt(s1)
	print("1-1 LAT")
	get_1_1_lat(s1)

